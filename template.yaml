AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  VirtualFeedEmpireWinesApp

  Sample SAM Template for VirtualFeedEmpireWinesApp

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

    Tracing: Active
  Api:
    TracingEnabled: true
Resources:
  VirtualFeedEmpireWinesStateMachineEventRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: VirtualFeedEmpireWinesStateMachineEventPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sns:Publish
                Resource:
                  - !Sub "arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:VirtualFeedEmpireWinesStateMachineErrorTopic_${Environment}"
      RoleName: !Sub VirtualFeedEmpireWinesStateMachineEventRole_${Environment}

  VirtualFeedEmpireWinesStateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - states.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: VirtualFeedEmpireWinesStateMachinePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - databrew:startJobRun
                  - databrew:listJobRuns
                  - databrew:stopJobRun
                Resource:
                  - !Sub "arn:${AWS::Partition}:databrew:${AWS::Region}:${AWS::AccountId}:job/${VirtualFeedEmpireWinesDataBrewJob}"
              - Effect: Allow
                Action:
                  - cloudwatch:PutMetricData
                Resource: '*'
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource: '*'
      RoleName: !Sub VirtualFeedEmpireWinesStateMachineRole_${Environment}

  VirtualFeedEmpireWinesStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: !Sub VirtualFeedEmpireWinesStateMachine_${Environment}
      DefinitionUri: statemachine/virtual_feed_empirewines.asl.json
      DefinitionSubstitutions:
        GlueDataBrewQueryJobName: !Ref VirtualFeedEmpireWinesDataBrewJob
        LambdaExcelConvertFunctionName: !Ref VirtualFeedEmpireWinesExcelConvertFunction
        LambdaEmailFileFunctionName: !Ref VirtualFeedEmpireWinesEmailFileFunction
      Role: !GetAtt VirtualFeedEmpireWinesStateMachineRole.Arn

  VirtualFeedEmpireWinesStateMachineFailureEventRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub VirtualFeedEmpireWinesStateMachineFailureEventRule_${Environment}
      Description: "Send SNS alert upon VirtualFeedEmpireWinesStateMachine Failure"
      EventPattern:
        source:
          - aws.states
        detail-type:
          - Step Functions Execution Status Change
        detail:
          status:
            - FAILED
            - ABORTED
            - TIMED_OUT
          stateMachineArn:
            - !Ref VirtualFeedEmpireWinesStateMachine
      Targets:
        - Arn: !Ref VirtualFeedEmpireWinesStateMachineErrorTopic
          Id: !Sub VirtualFeedEmpireWinesStateMachineErrorTopic_${Environment}

  VirtualFeedEmpireWinesStateMachineErrorTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub VirtualFeedEmpireWinesStateMachineErrorTopic_${Environment}
      Subscription:
        - Endpoint: itadmin@polanerselections.com
          Protocol: email

  VirtualFeedEmpireWinesErrorTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Sid: AllowPublishToTopic
            Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action: 'sns:Publish'
            Resource:
              - !Ref VirtualFeedEmpireWinesStateMachineErrorTopic
      Topics:
        - !Ref VirtualFeedEmpireWinesStateMachineErrorTopic

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'

Outputs:
  VirtualFeedEmpireWinesStateMachineArn:
    Description: Virtual Feed Empire Wines State machine ARN
    Value: !Ref VirtualFeedEmpireWinesStateMachine
  VirtualFeedEmpireWinesStateMachineRoleArn:
    Description: IAM Role created for Empir eWines State Machine based on the specified
      SAM Policy Templates
    Value: !GetAtt VirtualFeedEmpireWinesStateMachineRole.Arn